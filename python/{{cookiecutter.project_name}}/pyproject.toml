[tool.poetry]
name = "{{cookiecutter.package_name}}"
version = "0.1.0"
description = ""
authors = ["cookiecutter.email"]
readme = "README.md"

[tool.poetry.scripts]
run-app = "{{cookiecutter.package_name}}.__main__:main"

[tool.poetry.dependencies]
python = "^3.12"

[tool.poetry.group.dev.dependencies]
pytest = "^8.1.1"
pytest-cov = "^5.0.0"
coverage = "^7.4.4"
pytest-mock = "^3.14.0"
ruff = "^0.3.5"
black = "^24.3.0"
mypy = "^1.9.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

########################################
# Coverage
########################################

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["{{cookiecutter.package_name}}"]

[tool.coverage.report]
show_missing = true

########################################
# Linting
########################################

[tool.ruff]
src = ['src', 'tests']
line-length = 120
lint.select = [
	#'A',	# No flake8 built-in checks
	#'ARG',
	#'B',
	#'B9',
	#'BLE',
	#'C',
	#'C4',
	#'D',
	#'DTZ',
	#'E',
	#'F',
	#'I',
	#'N',
	#'PIE',
	#'PT',
	#'PTH',
	#'Q',
	#'RET',
	#'RUF',
	#'S',
	#'SIM',
	#'SLF',
	#'T10',
	#'TCH',
	#'UP',
	#'W',
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    'S', # No security checks
    'D', # No doc checks
]

[tool.ruff.lint.pydocstyle]
convention = 'google'

[tool.ruff.lint.isort]
force-single-line = true
